#!/bin/bash
FIFO="$HOME/.cache/cmdq/cmdq.sock"
LOCK="$HOME/.cache/cmdq/cmdq.lock"

mkdir -p $(dirname "$FIFO")
if  [ ! -p "$FIFO" ] ; then
  echo "Creating pipe at $FIFO"
  if [ -e "$FIFO" ] ; then
    echo "removing old $FIFO"
    rm "$FIFO"
  fi
  mkfifo -m 600 "$FIFO"
fi

echocmd() {
  if [ $# -lt 1 -o -z "$1" ] ; then
    return
  fi
  echo "\$ $@"
  bash -i -l -c "$@"
  local res=$?
  echo "command exited with $res"
  return $res
}
export -f echocmd

cmdq_server() {
  # Open the script as reader and writer of FIFO to keep xargs from receiving EOF
  exec 3<>"$FIFO"
  xargs -r -a "$FIFO" -0 -I{} \
    bash -i -l -c 'echocmd "$@"' _ {}
}

cmdq_queue() {
  flock "$LOCK" echo -en "cd $PWD ; $@\x0" >> $FIFO &
}

cmdq_queue_usage() {
  echo "Usage: q [executable] [args...]"
  echo "Usage: cmdq"
  return
}

case "$(basename $0)" in
  "cmdq") cmdq_server
    ;;
  "q") cmdq_queue "$@"
    ;;
  "*") cmdq_help
    ;;
esac

